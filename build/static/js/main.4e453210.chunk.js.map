{"version":3,"sources":["Task.jsx","CreateTaskInput.jsx","tasksGateway.js","TasksList.jsx","TodoList.jsx","App.jsx","index.js"],"names":["Task","done","text","onChange","id","onDelete","listItemClasses","classNames","className","type","defaultChecked","onClick","CreateTaskInput","state","value","handleChange","event","setState","target","handleTaskCreate","props","onCreate","this","React","Component","baseUrl","createTask","taskData","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","fetchTasksList","res","json","tasksList","map","_id","task","updatedTask","taskId","deleteTask","TasksList","tasks","hetchTasks","handleTaskStatusChange","find","upTask","handleTaskDelete","sortedList","slice","sort","a","b","key","TodoList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e453210.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nconst Task = ({ done, text, onChange, id, onDelete }) => {\r\n    const listItemClasses = classNames('list-item', {'list-item_done': done});\r\n\r\n    return (\r\n        <li className={listItemClasses}>\r\n            <input className=\"list-item__checkbox\"\r\n                type=\"checkbox\"\r\n                defaultChecked={done}\r\n                onChange={()=> onChange(id)} />\r\n            <span className=\"list-item__text\">{text}</span>\r\n            <button className=\"list-item__delete-btn\" onClick={() => onDelete(id)}></button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\n\r\nclass CreateTaskInput extends React.Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n    handleTaskCreate = () => {\r\n        this.props.onCreate(this.state.value)\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-task\">\r\n                <input type=\"text\"\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange}\r\n                    className=\"create-task__input\" />\r\n\r\n                <button className=\" btn create-task__btn\" onClick={this.handleTaskCreate}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default CreateTaskInput;\r\n\r\n\r\n\r\n// take textfrom input\r\n// create task with text\r\n//add created task to the list","const baseUrl = 'https://5f16d5d3a346a00016739644.mockapi.io/tasks/tasks';\r\n\r\nexport const createTask = taskData => {\r\n    return fetch(baseUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify(taskData)\r\n    }).then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Faild to create task')\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchTasksList = () => {\r\n    return fetch(baseUrl).then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n        })\r\n        .then(tasksList => {\r\n            return tasksList.map(({ _id, ...task }) => ({\r\n                id: _id,\r\n                ...task,\r\n            }))\r\n        })\r\n}\r\n\r\n\r\nexport const updatedTask = (taskId, taskData) => {\r\n    return fetch(`${baseUrl}/${taskId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify(taskData)\r\n    }).then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Faild to create task')\r\n        }\r\n    });\r\n}\r\n\r\nexport const deleteTask = taskId => {\r\n    return fetch(`${baseUrl}/${taskId}`, {\r\n        method: 'DELETE',\r\n    }).then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Faild to create task')\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport Task from './Task';\r\nimport CreateTaskInput from './CreateTaskInput.jsx'\r\nimport { createTask, fetchTasksList, updatedTask, deleteTask } from './tasksGateway.js'\r\n\r\n\r\n\r\nclass TasksList extends React.Component {\r\n    state = {\r\n        tasks: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hetchTasks()\r\n    }\r\n\r\n    hetchTasks = () => {\r\n        fetchTasksList()\r\n            .then(tasksList =>\r\n                this.setState({\r\n                    tasks: tasksList\r\n                }),\r\n            );\r\n    };\r\n\r\n\r\n    //CREATE!!!!!!!\r\n    onCreate = text => {\r\n        const newTask = {\r\n            text,\r\n            done: false\r\n        }\r\n\r\n        createTask(newTask)\r\n            .then(() => this.hetchTasks())\r\n\r\n        // const updatedTasks = tasks.concat(newTask)\r\n        // this.setState({ tasks: updatedTasks });\r\n    }\r\n\r\n\r\n\r\n    //UPDATE!!!!!!!!!!!\r\n    handleTaskStatusChange = id => {\r\n        // find tasks in a list \r\n        // toggle done value\r\n        // save updated list\r\n\r\n        const { done, text } = this.state.tasks.find(task => task.id === id)\r\n        const upTask = {\r\n            ...text,\r\n            done: !done\r\n        };\r\n\r\n        updatedTask(id, upTask)\r\n            .then(() => this.hetchTasks())\r\n\r\n\r\n\r\n            \r\n    };\r\n    //DELETE!!!!!!!!!!\r\n    handleTaskDelete = id => {\r\n        deleteTask(id)\r\n        .then(() => this.hetchTasks())\r\n        \r\n    };\r\n\r\n\r\n    render() {\r\n        const sortedList = this.state.tasks\r\n            .slice()\r\n            .sort((a, b) => a.done - b.done)\r\n        return (\r\n            <div className=\"todo-list\">\r\n                <CreateTaskInput onCreate={this.onCreate} />\r\n                <ul className=\"list\">\r\n                    {sortedList.map(task => (\r\n                        <Task\r\n                            key={task.id}\r\n                            {...task}\r\n                            onDelete={this.handleTaskDelete}\r\n                            onChange={this.handleTaskStatusChange}\r\n                        />\r\n                    ))}\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TasksList;","import React from 'react';\r\nimport TasksList from './TasksList.jsx'\r\n\r\nconst TodoList = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Todo List</h1>\r\n            <TasksList />\r\n        </>\r\n    )\r\n}\r\nexport default TodoList","import  React from 'react';\r\nimport TodoList from './TodoList.jsx'\r\n\r\nconst App = () => {\r\n    return (\r\n        <TodoList />\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App.jsx'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}